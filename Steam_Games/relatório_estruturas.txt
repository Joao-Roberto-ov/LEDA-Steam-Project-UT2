RELATÓRIO DE IMPLEMENTAÇÃO DE ESTRUTURAS DE DADOS
=============================================

Este relatório descreve a implementação e justificativa das três estruturas de dados principais utilizadas no projeto: Lista Encadeada, Árvore Binária de Busca e Fila.

1. LISTA ENCADEADA
-----------------
Local de Implementação: src/ListaEncadeada.java
Uso Principal: CSVManager.java

Justificativa:
- A Lista Encadeada foi implementada para substituir o ArrayList no processo de carregamento inicial dos jogos
- Vantagens da implementação:
  * Inserção eficiente de novos elementos (O(1))
  * Não requer pré-alocação de memória
  * Flexibilidade para lidar com número dinâmico de jogos
  * Fácil conversão para array quando necessário para ordenação

Implementação:
- Classe interna No para representar os nós
- Métodos principais:
  * adicionar(Game jogo): Insere um novo jogo na lista
  * toArray(): Converte a lista para array
  * getTamanho(): Retorna o número de elementos
  * estaVazia(): Verifica se a lista está vazia

2. ÁRVORE BINÁRIA DE BUSCA
-------------------------
Local de Implementação: src/ArvoreBinaria.java
Uso Principal: Main.java

Justificativa:
- Implementada para indexação eficiente dos jogos por nome
- Vantagens da implementação:
  * Busca eficiente (O(log n))
  * Mantém os jogos ordenados por nome
  * Facilita a implementação de filtros e buscas
  * Estrutura ideal para operações de busca e recuperação

Implementação:
- Classe interna No para representar os nós da árvore
- Métodos principais:
  * inserir(Game jogo): Insere um jogo na árvore
  * buscar(String nome): Busca um jogo pelo nome
  * toArray(): Converte a árvore para array ordenado
  * percorrerEmOrdem(): Percorre a árvore em ordem

3. FILA
------
Local de Implementação: src/Fila.java
Uso Principal: Main.java

Justificativa:
- Implementada para gerenciar o processamento dos jogos em ordem FIFO
- Vantagens da implementação:
  * Processamento ordenado dos jogos
  * Controle eficiente do fluxo de processamento
  * Gerenciamento de recursos de forma organizada
  * Ideal para processamento em lote

Implementação:
- Classe interna No para representar os nós da fila
- Métodos principais:
  * enfileirar(Game jogo): Adiciona um jogo à fila
  * desenfileirar(): Remove e retorna o primeiro jogo
  * primeiro(): Retorna o primeiro jogo sem removê-lo
  * toArray(): Converte a fila para array
  * estaVazia(): Verifica se a fila está vazia

INTEGRAÇÃO DAS ESTRUTURAS
------------------------
As três estruturas trabalham em conjunto para otimizar o processamento dos dados:

1. A Lista Encadeada é usada no carregamento inicial dos dados do CSV
2. A Árvore Binária é utilizada para indexação e busca eficiente
3. A Fila gerencia o processamento dos jogos em ordem

Esta integração permite:
- Carregamento eficiente dos dados
- Busca rápida de jogos específicos
- Processamento ordenado e controlado
- Manutenção da performance do sistema

CONCLUSÃO
---------
A implementação das três estruturas de dados trouxe melhorias significativas na organização e eficiência do código, mantendo a mesma funcionalidade do sistema original. Cada estrutura foi escolhida e implementada considerando suas características específicas e o contexto de uso no projeto. 